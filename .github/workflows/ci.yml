name: Go CLI CRUD CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'        # Solo para releases
  pull_request:
    branches:
      - main

permissions:
  contents: write      # Permiso necesario para crear releases

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Format check
        run: test -z "$(gofmt -l .)" || (echo "Run gofmt!" && exit 1)

      - name: Vet code
        run: go vet ./...

      - name: Run tests
        run: go test -v ./...

      - name: Build binary
        run: |
          mkdir -p bin
          go build -o bin/cli

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build binary
        run: |
          mkdir -p bin
          go build -o bin/cli

      - name: Create a GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload binary to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/cli
          asset_name: cli-${{ github.ref_name }}-linux-amd64
          asset_content_type: application/octet-stream
